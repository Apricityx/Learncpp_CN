{
  "recentFiles": [
    {
      "basename": "11-17-An-introduction-to-std-vector",
      "path": "docs/11-17-An-introduction-to-std-vector.md"
    },
    {
      "basename": "MOC",
      "path": "docs/MOC.md"
    },
    {
      "basename": "11-16-An-introduction-to-std-array",
      "path": "docs/11-16-An-introduction-to-std-array.md"
    },
    {
      "basename": "typeid",
      "path": "docs/typeid.md"
    },
    {
      "basename": "9-6-Introduction-to-pointers",
      "path": "docs/9-6-Introduction-to-pointers.md"
    },
    {
      "basename": "8-4-Arithmetic-conversions",
      "path": "docs/8-4-Arithmetic-conversions.md"
    },
    {
      "basename": "4-5-Unsigned-integers-and-why-to-avoid-them",
      "path": "docs/4-5-Unsigned-integers-and-why-to-avoid-them.md"
    },
    {
      "basename": "8-7-Type-deduction-for-objects-using-the auto-keyword",
      "path": "docs/8-7-Type-deduction-for-objects-using-the auto-keyword.md"
    },
    {
      "basename": "range-based-for-loops",
      "path": "docs/range-based-for-loops.md"
    },
    {
      "basename": "list-initialization",
      "path": "docs/list-initialization.md"
    },
    {
      "basename": "16-2-composition",
      "path": "docs/16-2-composition.md"
    },
    {
      "basename": "16-1-object-relationships",
      "path": "docs/16-1-object-relationships.md"
    },
    {
      "basename": "16-x-Chapter-16-comprehensive-quiz",
      "path": "docs/16-x-Chapter-16-comprehensive-quiz.md"
    },
    {
      "basename": "16-6-container-classes",
      "path": "docs/16-6-container-classes.md"
    },
    {
      "basename": "reference-container",
      "path": "docs/reference-container.md"
    },
    {
      "basename": "value-container",
      "path": "docs/value-container.md"
    },
    {
      "basename": "13-5-constructors",
      "path": "docs/13-5-constructors.md"
    },
    {
      "basename": "12-x-chapter-12-comprehensive-quiz",
      "path": "docs/12-x-chapter-12-comprehensive-quiz.md"
    },
    {
      "basename": "12-8-lambda-captures",
      "path": "docs/12-8-lambda-captures.md"
    },
    {
      "basename": "12-7-introduction-to-lambdas-anonymous-functions",
      "path": "docs/12-7-introduction-to-lambdas-anonymous-functions.md"
    },
    {
      "basename": "21-1-the-standard-library",
      "path": "docs/21-1-the-standard-library.md"
    },
    {
      "basename": "21.4 — STL algorithms overview",
      "path": "docs/21.4 — STL algorithms overview.md"
    },
    {
      "basename": "21-3-STL-iterators-overview",
      "path": "docs/21-3-STL-iterators-overview.md"
    },
    {
      "basename": "21-2-STL-containers-overview",
      "path": "docs/21-2-STL-containers-overview.md"
    },
    {
      "basename": "M-x-chapter-M-comprehensive-review",
      "path": "docs/M-x-chapter-M-comprehensive-review.md"
    },
    {
      "basename": "M-6-std-unique-ptr",
      "path": "docs/M-6-std-unique-ptr.md"
    },
    {
      "basename": "M-8-circular-dependency-issues-with-std-shared-ptr-and-std-weak-ptr",
      "path": "docs/M-8-circular-dependency-issues-with-std-shared-ptr-and-std-weak-ptr.md"
    },
    {
      "basename": "M-7-std-shared-ptr",
      "path": "docs/M-7-std-shared-ptr.md"
    },
    {
      "basename": "M-1-introduction-to-smart-pointers-and-move-semantics",
      "path": "docs/M-1-introduction-to-smart-pointers-and-move-semantics.md"
    },
    {
      "basename": "M-4-std-move",
      "path": "docs/M-4-std-move.md"
    },
    {
      "basename": "exception-safety-issue",
      "path": "docs/exception-safety-issue.md"
    },
    {
      "basename": "member-access-operator",
      "path": "docs/member-access-operator.md"
    },
    {
      "basename": "dereference-operator",
      "path": "docs/dereference-operator.md"
    },
    {
      "basename": "M-5-std-move-if-noexcept",
      "path": "docs/M-5-std-move-if-noexcept.md"
    },
    {
      "basename": "M-3-move-constructors-and-move-assignment",
      "path": "docs/M-3-move-constructors-and-move-assignment.md"
    },
    {
      "basename": "copy-semantics",
      "path": "docs/copy-semantics.md"
    },
    {
      "basename": "move-assignment-operator",
      "path": "docs/move-assignment-operator.md"
    },
    {
      "basename": "M-2-R-value-references",
      "path": "docs/M-2-R-value-references.md"
    },
    {
      "basename": "11-19-Introduction-to-standard-library-algorithms",
      "path": "docs/11-19-Introduction-to-standard-library-algorithms.md"
    },
    {
      "basename": "11-18-Introduction-to-iterators",
      "path": "docs/11-18-Introduction-to-iterators.md"
    },
    {
      "basename": "11-15-Pointers-to-pointers-and-dynamic-multidimensional-arrays",
      "path": "docs/11-15-Pointers-to-pointers-and-dynamic-multidimensional-arrays.md"
    },
    {
      "basename": "11-13-For-each-loops",
      "path": "docs/11-13-For-each-loops.md"
    },
    {
      "basename": "11-3-Arrays-and-loops",
      "path": "docs/11-3-Arrays-and-loops.md"
    },
    {
      "basename": "11-2-Arrays-Part-II",
      "path": "docs/11-2-Arrays-Part-II.md"
    },
    {
      "basename": "zero-initialization",
      "path": "docs/zero-initialization.md"
    },
    {
      "basename": "initializer-list",
      "path": "docs/initializer-list.md"
    },
    {
      "basename": "11-1-Arrays-Part-I",
      "path": "docs/11-1-Arrays-Part-I.md"
    },
    {
      "basename": "9-12-Type-deduction-with-pointers-references-and-const",
      "path": "docs/9-12-Type-deduction-with-pointers-references-and-const.md"
    },
    {
      "basename": "9-11-Return-by-reference-and-return-by-address",
      "path": "docs/9-11-Return-by-reference-and-return-by-address.md"
    },
    {
      "basename": "9-10-Pass-by-address-part-2",
      "path": "docs/9-10-Pass-by-address-part-2.md"
    }
  ],
  "omittedPaths": [],
  "maxLength": null
}