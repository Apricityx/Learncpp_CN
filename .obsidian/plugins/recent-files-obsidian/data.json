{
  "recentFiles": [
    {
      "basename": "11-12-Dynamically-allocating-arrays",
      "path": "docs/11-12-Dynamically-allocating-arrays.md"
    },
    {
      "basename": "MOC",
      "path": "docs/MOC.md"
    },
    {
      "basename": "11-13-For-each-loops",
      "path": "docs/11-13-For-each-loops.md"
    },
    {
      "basename": "11-11-Dynamic-memory-allocation-with-new-and-delete",
      "path": "docs/11-11-Dynamic-memory-allocation-with-new-and-delete.md"
    },
    {
      "basename": "memory-leak",
      "path": "docs/memory-leak.md"
    },
    {
      "basename": "heap",
      "path": "docs/heap.md"
    },
    {
      "basename": "4-17-An introduction-to-std-string",
      "path": "docs/4-17-An introduction-to-std-string.md"
    },
    {
      "basename": "11-16-An-introduction-to-std-array",
      "path": "docs/11-16-An-introduction-to-std-array.md"
    },
    {
      "basename": "11-14-Void-pointers",
      "path": "docs/11-14-Void-pointers.md"
    },
    {
      "basename": "11-15-Pointers-to-pointers-and-dynamic-multidimensional-arrays",
      "path": "docs/11-15-Pointers-to-pointers-and-dynamic-multidimensional-arrays.md"
    },
    {
      "basename": "stack",
      "path": "docs/stack.md"
    },
    {
      "basename": "dynamic-memory-allocation",
      "path": "docs/dynamic-memory-allocation.md"
    },
    {
      "basename": "automatic-memory-allocation",
      "path": "docs/automatic-memory-allocation.md"
    },
    {
      "basename": "static-memory-allocation",
      "path": "docs/static-memory-allocation.md"
    },
    {
      "basename": "11-9-Pointer-arithmetic-and-array-indexing",
      "path": "docs/11-9-Pointer-arithmetic-and-array-indexing.md"
    },
    {
      "basename": "11-1-Arrays-Part-I",
      "path": "docs/11-1-Arrays-Part-I.md"
    },
    {
      "basename": "11-x-Chapter-11-comprehensive-quiz",
      "path": "docs/11-x-Chapter-11-comprehensive-quiz.md"
    },
    {
      "basename": "11-19-Introduction-to-standard-library-algorithms",
      "path": "docs/11-19-Introduction-to-standard-library-algorithms.md"
    },
    {
      "basename": "callable-object",
      "path": "docs/callable-object.md"
    },
    {
      "basename": "11-18-Introduction-to-iterators",
      "path": "docs/11-18-Introduction-to-iterators.md"
    },
    {
      "basename": "12-x-chapter-12-comprehensive-quiz",
      "path": "docs/12-x-chapter-12-comprehensive-quiz.md"
    },
    {
      "basename": "13-x-Chapter-13-comprehensive-quiz",
      "path": "docs/13-x-Chapter-13-comprehensive-quiz.md"
    },
    {
      "basename": "21-4-STL-algorithms-overview",
      "path": "docs/21-4-STL-algorithms-overview.md"
    },
    {
      "basename": "21-3-STL-iterators-overview",
      "path": "docs/21-3-STL-iterators-overview.md"
    },
    {
      "basename": "21-2-STL-containers-overview",
      "path": "docs/21-2-STL-containers-overview.md"
    },
    {
      "basename": "21-1-the-standard-library",
      "path": "docs/21-1-the-standard-library.md"
    },
    {
      "basename": "M-8-circular-dependency-issues-with-std-shared-ptr-and-std-weak-ptr",
      "path": "docs/M-8-circular-dependency-issues-with-std-shared-ptr-and-std-weak-ptr.md"
    },
    {
      "basename": "M-7-std-shared-ptr",
      "path": "docs/M-7-std-shared-ptr.md"
    },
    {
      "basename": "M-6-std-unique-ptr",
      "path": "docs/M-6-std-unique-ptr.md"
    },
    {
      "basename": "M-5-std-move-if-noexcept",
      "path": "docs/M-5-std-move-if-noexcept.md"
    },
    {
      "basename": "M-4-std-move",
      "path": "docs/M-4-std-move.md"
    },
    {
      "basename": "M-3-move-constructors-and-move-assignment",
      "path": "docs/M-3-move-constructors-and-move-assignment.md"
    },
    {
      "basename": "M-2-R-value-references",
      "path": "docs/M-2-R-value-references.md"
    },
    {
      "basename": "M-1-introduction-to-smart-pointers-and-move-semantics",
      "path": "docs/M-1-introduction-to-smart-pointers-and-move-semantics.md"
    },
    {
      "basename": "12-8-lambda-captures",
      "path": "docs/12-8-lambda-captures.md"
    },
    {
      "basename": "12-7-introduction-to-lambdas-anonymous-functions",
      "path": "docs/12-7-introduction-to-lambdas-anonymous-functions.md"
    },
    {
      "basename": "12-6-Ellipsis-and-why-to-avoid-them",
      "path": "docs/12-6-Ellipsis-and-why-to-avoid-them.md"
    },
    {
      "basename": "12-5-command-line-arguments",
      "path": "docs/12-5-command-line-arguments.md"
    },
    {
      "basename": "12-4-recursion",
      "path": "docs/12-4-recursion.md"
    },
    {
      "basename": "12-3-std-vector-capacity-and-stack-behavior",
      "path": "docs/12-3-std-vector-capacity-and-stack-behavior.md"
    },
    {
      "basename": "12-2-the-stack-and-the-heap",
      "path": "docs/12-2-the-stack-and-the-heap.md"
    },
    {
      "basename": "12-1-function-pointers",
      "path": "docs/12-1-function-pointers.md"
    },
    {
      "basename": "18-1-pointers-and-references-to-the-base-class-of-derived-objects",
      "path": "docs/18-1-pointers-and-references-to-the-base-class-of-derived-objects.md"
    },
    {
      "basename": "18-x-Chapter-18-comprehensive-quiz",
      "path": "docs/18-x-Chapter-18-comprehensive-quiz.md"
    },
    {
      "basename": "18-2-virtual-functions-and-polymorphism",
      "path": "docs/18-2-virtual-functions-and-polymorphism.md"
    },
    {
      "basename": "23-1-Input-and-output-IO-streams",
      "path": "docs/23-1-Input-and-output-IO-streams.md"
    },
    {
      "basename": "23-7-random-file-IO",
      "path": "docs/23-7-random-file-IO.md"
    },
    {
      "basename": "23-6-basic-file-IO",
      "path": "docs/23-6-basic-file-IO.md"
    },
    {
      "basename": "23-5-stream-states-and-input-validation",
      "path": "docs/23-5-stream-states-and-input-validation.md"
    },
    {
      "basename": "23-4-stream-classes-for-strings",
      "path": "docs/23-4-stream-classes-for-strings.md"
    }
  ],
  "omittedPaths": [],
  "maxLength": null
}