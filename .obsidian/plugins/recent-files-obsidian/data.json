{
  "recentFiles": [
    {
      "basename": "8-5-Explicit-type-conversion-casting-and-static-cast",
      "path": "docs/8-5-Explicit-type-conversion-casting-and-static-cast.md"
    },
    {
      "basename": "8-4-Arithmetic-conversions",
      "path": "docs/8-4-Arithmetic-conversions.md"
    },
    {
      "basename": "4-5-Unsigned-integers-and-why-to-avoid-them",
      "path": "docs/4-5-Unsigned-integers-and-why-to-avoid-them.md"
    },
    {
      "basename": "8-6-Typedefs-and-type-aliases",
      "path": "docs/8-6-Typedefs-and-type-aliases.md"
    },
    {
      "basename": "8-1-Implicit-type-conversion-coercion",
      "path": "docs/8-1-Implicit-type-conversion-coercion.md"
    },
    {
      "basename": "8-2-Floating-point-and-integral-promotion",
      "path": "docs/8-2-Floating-point-and-integral-promotion.md"
    },
    {
      "basename": "8-3-Numeric-conversions",
      "path": "docs/8-3-Numeric-conversions.md"
    },
    {
      "basename": "narrowing-convertions",
      "path": "docs/narrowing-convertions.md"
    },
    {
      "basename": "numeric promotions",
      "path": "docs/numeric promotions.md"
    },
    {
      "basename": "numeric-conversions",
      "path": "docs/numeric-conversions.md"
    },
    {
      "basename": "value-preserving",
      "path": "docs/value-preserving.md"
    },
    {
      "basename": "index",
      "path": "docs/index.md"
    },
    {
      "basename": "1-2-comments",
      "path": "docs/1-2-comments.md"
    },
    {
      "basename": "8-9-Introduction-to-function-overloading",
      "path": "docs/8-9-Introduction-to-function-overloading.md"
    },
    {
      "basename": "8-8-Type-deduction-for-functions",
      "path": "docs/8-8-Type-deduction-for-functions.md"
    },
    {
      "basename": "8-7-Type-deduction-for-objects-using-the auto-keyword",
      "path": "docs/8-7-Type-deduction-for-objects-using-the auto-keyword.md"
    },
    {
      "basename": "explicit-type-conversion",
      "path": "docs/explicit-type-conversion.md"
    },
    {
      "basename": "implicit-type-conversion",
      "path": "docs/implicit-type-conversion.md"
    },
    {
      "basename": "bit",
      "path": "docs/bit.md"
    },
    {
      "basename": "8-x-Chapter-8-summary-and-quiz",
      "path": "docs/8-x-Chapter-8-summary-and-quiz.md"
    },
    {
      "basename": "4-x-Chapter-4-summary-and-quiz",
      "path": "docs/4-x-Chapter-4-summary-and-quiz.md"
    },
    {
      "basename": "7-1-Control-flow-introduction",
      "path": "docs/7-1-Control-flow-introduction.md"
    },
    {
      "basename": "6-11-Scope-duration-and-linkage-summary",
      "path": "docs/6-11-Scope-duration-and-linkage-summary.md"
    },
    {
      "basename": "6-x-Chapter-6-summary-and-quiz",
      "path": "docs/6-x-Chapter-6-summary-and-quiz.md"
    },
    {
      "basename": "6-12-Using-declarations-and-using directives",
      "path": "docs/6-12-Using-declarations-and-using directives.md"
    },
    {
      "basename": "6-7-External-linkage-and-variable-forward-declarations",
      "path": "docs/6-7-External-linkage-and-variable-forward-declarations.md"
    },
    {
      "basename": "6-4-Introduction-to-global-variables",
      "path": "docs/6-4-Introduction-to-global-variables.md"
    },
    {
      "basename": "dynamic-duration",
      "path": "docs/dynamic-duration.md"
    },
    {
      "basename": "6-2-User-defined-namespaces-and-the-scope-resolution-operator",
      "path": "docs/6-2-User-defined-namespaces-and-the-scope-resolution-operator.md"
    },
    {
      "basename": "global-variable",
      "path": "docs/global-variable.md"
    },
    {
      "basename": "6-10-Static-local-variables",
      "path": "docs/6-10-Static-local-variables.md"
    },
    {
      "basename": "6-9-Sharing-global-constants-across-multiple-files-using-inline-variables",
      "path": "docs/6-9-Sharing-global-constants-across-multiple-files-using-inline-variables.md"
    },
    {
      "basename": "6-8-Why-non-const-global-variables-are-evil",
      "path": "docs/6-8-Why-non-const-global-variables-are-evil.md"
    },
    {
      "basename": "6-15-Unnamed-and-inline-namespaces",
      "path": "docs/6-15-Unnamed-and-inline-namespaces.md"
    },
    {
      "basename": "6-14-Constexpr-and-consteval-functions",
      "path": "docs/6-14-Constexpr-and-consteval-functions.md"
    },
    {
      "basename": "6-13-Inline-functions",
      "path": "docs/6-13-Inline-functions.md"
    },
    {
      "basename": "2-6-Why-functions-are-useful-and-how-to-use-them-effectively",
      "path": "docs/2-6-Why-functions-are-useful-and-how-to-use-them-effectively.md"
    },
    {
      "basename": "MOC",
      "path": "docs/MOC.md"
    },
    {
      "basename": "excalibrain",
      "path": "excalibrain.md"
    },
    {
      "basename": "3-5-More-debugging-tactics",
      "path": "docs/3-5-More-debugging-tactics.md"
    },
    {
      "basename": "2-2-Function-return-values-value-returning functions",
      "path": "docs/2-2-Function-return-values-value-returning functions.md"
    },
    {
      "basename": "4-7-Introduction-to-scientific-notation",
      "path": "docs/4-7-Introduction-to-scientific-notation.md"
    },
    {
      "basename": "4-8-Floating-point-numbers",
      "path": "docs/4-8-Floating-point-numbers.md"
    },
    {
      "basename": "Drawing 2022-06-19 00.48.49.excalidraw",
      "path": "Excalidraw/Drawing 2022-06-19 00.48.49.excalidraw.md"
    },
    {
      "basename": "immediate-functions",
      "path": "docs/immediate-functions.md"
    },
    {
      "basename": "7-11-Halts-exiting-your-program-early",
      "path": "docs/7-11-Halts-exiting-your-program-early.md"
    },
    {
      "basename": "7-9-For-statements",
      "path": "docs/7-9-For-statements.md"
    },
    {
      "basename": "7-10-Break-and-continue",
      "path": "docs/7-10-Break-and-continue.md"
    },
    {
      "basename": "7-8-Do-while-statements",
      "path": "docs/7-8-Do-while-statements.md"
    },
    {
      "basename": "7-5-Switch-fallthrough-and-scoping",
      "path": "docs/7-5-Switch-fallthrough-and-scoping.md"
    }
  ],
  "omittedPaths": [],
  "maxLength": null
}